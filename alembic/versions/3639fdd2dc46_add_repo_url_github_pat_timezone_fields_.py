"""Add repo_url, github_pat, timezone fields to user_setting

Revision ID: 3639fdd2dc46
Revises: 7565b5ff609a
Create Date: 2025-05-28 00:56:26.755193

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "3639fdd2dc46"
down_revision: str | None = "7565b5ff609a"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_index(op.f("ix_apscheduler_jobs_next_run_time"), table_name="apscheduler_jobs")
    # op.drop_table("apscheduler_jobs")
    op.add_column("user_setting", sa.Column("github_pat", sa.String(length=500), nullable=True))
    op.add_column("user_setting", sa.Column("repo_url", sa.String(length=200), nullable=True))
    op.add_column("user_setting", sa.Column("timezone", sa.String(length=50), nullable=True))
    op.alter_column(
        "user_setting",
        "id",
        existing_type=sa.VARCHAR(length=32),
        type_=sa.String(length=50),
        existing_nullable=False,
    )
    op.alter_column(
        "user_setting",
        "github_id",
        existing_type=sa.TEXT(),
        type_=sa.String(length=50),
        existing_nullable=True,
    )
    op.alter_column(
        "user_setting",
        "pat",
        existing_type=sa.TEXT(),
        type_=sa.String(length=100),
        existing_nullable=True,
    )
    op.alter_column(
        "user_setting",
        "repo_name",
        existing_type=sa.TEXT(),
        type_=sa.String(length=100),
        existing_nullable=True,
    )
    op.alter_column(
        "user_setting", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column(
        "user_setting", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "user_setting", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column(
        "user_setting", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column(
        "user_setting",
        "repo_name",
        existing_type=sa.String(length=100),
        type_=sa.TEXT(),
        existing_nullable=True,
    )
    op.alter_column(
        "user_setting",
        "pat",
        existing_type=sa.String(length=100),
        type_=sa.TEXT(),
        existing_nullable=True,
    )
    op.alter_column(
        "user_setting",
        "github_id",
        existing_type=sa.String(length=50),
        type_=sa.TEXT(),
        existing_nullable=True,
    )
    op.alter_column(
        "user_setting",
        "id",
        existing_type=sa.String(length=50),
        type_=sa.VARCHAR(length=32),
        existing_nullable=False,
    )
    op.drop_column("user_setting", "timezone")
    op.drop_column("user_setting", "repo_url")
    op.drop_column("user_setting", "github_pat")
    op.create_table(
        "apscheduler_jobs",
        sa.Column("id", sa.VARCHAR(length=191), autoincrement=False, nullable=False),
        sa.Column(
            "next_run_time", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True
        ),
        sa.Column("job_state", postgresql.BYTEA(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("apscheduler_jobs_pkey")),
    )
    op.create_index(
        op.f("ix_apscheduler_jobs_next_run_time"),
        "apscheduler_jobs",
        ["next_run_time"],
        unique=False,
    )
    # ### end Alembic commands ###
