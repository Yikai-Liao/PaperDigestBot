[build-system]
requires = ["setuptools", "wheel"]

[project]
name = "paper_digest_bot"
version = "0.1.0"
requires-python = ">=3.12"
dependencies = [
    "taskiq",
    "loguru",
    "pytest",
    "pytest-mock",
    "pytest-asyncio",
    "python-telegram-bot[all,ext]>=22.0",
    "toml>=0.10.2",
    "qdrant-client>=1.14.2",
    "pika>=1.3.2",
    "requests>=2.32.3",
    "taskiq-aio-pika>=0.4.2",
    "pycryptodome>=3.22.0",
    "python-vaultwarden>=1.0.1",
    "ipython>=9.2.0",
    "ipykernel>=6.29.5",
    "taskiq-redis>=1.0.8",
    "redis>=5.3.0",
    "aiohttp>=3.11.18",
    "polars>=1.29.0",
    "jinja2>=3.1.6",
    "apscheduler>=3.11.0",
    "pytz>=2025.2",
    "sqlalchemy>=2.0.41",
    "psycopg2-binary>=2.9.10",
    "dotenv>=0.9.9",
    "python-dotenv>=1.1.0",
    "pydantic>=2.11.4",
    "pydantic-settings>=2.9.1",
    "fastapi>=0.115.12",
    "alembic>=1.16.1",
    "duckdb>=1.3.0",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
pythonpath = "src"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
]

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["F401", "F811"]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "coverage>=7.8.2",
    "httpx>=0.28.1",
    "isort>=6.0.1",
    "mypy>=1.15.0",
    "psycopg[binary]>=3.2.9",
    "pytest-cov>=6.1.1",
    "pytest-postgresql>=7.0.2",
    "ruff>=0.11.11",
    "testcontainers>=4.10.0",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "*/__init__.py",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
